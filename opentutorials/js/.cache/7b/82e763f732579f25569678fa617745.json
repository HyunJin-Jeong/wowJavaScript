{"id":"index.js","dependencies":[],"generated":{"js":"'use strict';\n/*\n\nclass Shape{\n    constructor(width, height, color){\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    draw(){\n        console.log(`drawing ${this.color} color`)\n    }\n\n    getArea(){\n        return this.width * this.height;\n    }\n}\n\nclass Rectangle extends Shape{\n    draw(){\n        super.draw();\n        console.log('Nice Color!');\n    }\n}\nclass Triangle extends Shape{\n    getArea(){\n        return (this.width * this.height) / 2\n    }\n}\n\nconst rectangle = new Rectangle(20, 20, 'blue');\nrectangle.draw();\nconsole.log(rectangle.getArea());\n\nconst triangle = new Triangle(20, 20, 'red');\ntriangle.draw();\nconsole.log(triangle.getArea());\n\n\nclass User{\n    constructor(firstName, lastName, age){\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n    }\n\n    get age(){\n        return this._age;\n    }\n\n    set age(value){\n        this._age = value < 0 ? 0 : value;\n    }\n\n    static printHelloUser(){\n        console.log('Hello! User');\n    }\n}\n\nconst user1 = new User('hyunjin', 'jeong', 1567);\nconsole.log(user1.age);\nUser.printHelloUser();\n\nclass Person{\n    constructor(name, age){\n        this.name = name;\n        this.age = age;\n    }\n\n    speak(){\n        console.log(`${this.name}: hello!`)\n    }\n}\n\nconst hyunjin = new Person('hyunjin', 21);\nconsole.log(hyunjin.name);\nconsole.log(hyunjin.age);\nhyunjin.speak();\n*/"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"index.js","original":{"line":4,"column":0}}],"sources":{"index.js":"'use strict';\n\n\n/*\n\nclass Shape{\n    constructor(width, height, color){\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    draw(){\n        console.log(`drawing ${this.color} color`)\n    }\n\n    getArea(){\n        return this.width * this.height;\n    }\n}\n\nclass Rectangle extends Shape{\n    draw(){\n        super.draw();\n        console.log('Nice Color!');\n    }\n}\nclass Triangle extends Shape{\n    getArea(){\n        return (this.width * this.height) / 2\n    }\n}\n\nconst rectangle = new Rectangle(20, 20, 'blue');\nrectangle.draw();\nconsole.log(rectangle.getArea());\n\nconst triangle = new Triangle(20, 20, 'red');\ntriangle.draw();\nconsole.log(triangle.getArea());\n\n\nclass User{\n    constructor(firstName, lastName, age){\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n    }\n\n    get age(){\n        return this._age;\n    }\n\n    set age(value){\n        this._age = value < 0 ? 0 : value;\n    }\n\n    static printHelloUser(){\n        console.log('Hello! User');\n    }\n}\n\nconst user1 = new User('hyunjin', 'jeong', 1567);\nconsole.log(user1.age);\nUser.printHelloUser();\n\nclass Person{\n    constructor(name, age){\n        this.name = name;\n        this.age = age;\n    }\n\n    speak(){\n        console.log(`${this.name}: hello!`)\n    }\n}\n\nconst hyunjin = new Person('hyunjin', 21);\nconsole.log(hyunjin.name);\nconsole.log(hyunjin.age);\nhyunjin.speak();\n*/"},"lineCount":null}},"error":null,"hash":"d0c61098994190fe343790fc521dd5db","cacheData":{"env":{}}}